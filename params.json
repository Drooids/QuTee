{"tagline":"PHP Background Jobs (Tasks) Manager","note":"Don't delete this file! It's used internally to help with page regeneration.","google":"","name":"Qutee","body":"QuTee\r\n=====\r\n\r\n[![Build Status](https://travis-ci.org/anorgan/QuTee.png)](https://travis-ci.org/anorgan/QuTee)\r\n\r\nSimple queue manager and task processor for PHP\r\n\r\nExample\r\n-------\r\n``` php\r\n<?php\r\n/*\r\n * Bootstrap / DIC\r\n */\r\n$redisParams    = array(\r\n    'host'  => '127.0.0.1',\r\n    'port'  => 6379\r\n);\r\n$queuePersistor = new Qutee\\Persistor\\Redis($redisParams);\r\n\r\n$queue          = new Queue();\r\n$queue->setPersistor($queuePersistor);\r\n\r\n/*\r\n * App\r\n */\r\n\r\n// Create Task\r\n$task = new Task;\r\n$task\r\n    ->setName('Acme/DeleteFolder')\r\n    ->setData(array('/usr'))\r\n    ->setPriority(Task::PRIORITY_HIGH);\r\n\r\n// Queue it\r\n$queue->addTask($task);\r\n\r\n// Or do this in one go\r\nTask::create('Acme/DeleteFolder', array('/usr'), Task::PRIORITY_HIGH);\r\n```\r\n\r\n``` php\r\n<?php\r\n// Worker - process all queues (folder_deleter.php)\r\n$worker = new Worker;\r\n$worker->run();\r\n\r\n// Or, with more configuration\r\n$worker = new Worker;\r\n$worker\r\n    ->setInterval(30)                   // Run every 30 seconds\r\n    ->setPriority(Task::PRIORITY_HIGH)  // Will only do tasks of this priority\r\n    ->run();\r\n\r\n```\r\n\r\nDisclaimer\r\n----------\r\n\r\n- Worker does not fork yet, could be highly unstable, use supervisord or similar\r\n- Extremely simple, does not pretend to replace 0MQ, Gearman, Redis and such\r\n\r\n[TODO](https://github.com/anorgan/QuTee/issues?milestone=1&state=open)\r\n----\r\n- Add queue persistor using adapters (DB, MongoDB, Memcache)\r\n- Make worker spawn child processes for running tasks\r\n- Add logging\r\n- Add reporting dashboard"}